<h2 id="Methods">Methods</h2>

<p><em>This interface inherits methods from the {{domxref("WorkerGlobalScope")}} interface, and its parent {{domxref("EventTarget")}}, and therefore implements methods from {{domxref("WindowTimers")}}, {{domxref("WindowBase64")}}, and {{domxref("WindowEventHandlers")}}.</em></p>

<dl>
	<dt>{{domxref("DedicatedWorkerGlobalScope.close()")}}</dt>
	<dd>Discards any tasks queued in the <code>WorkerGlobalScope</code>'s event loop, effectively closing this particular scope.</dd>
	<dt>{{domxref("DedicatedWorkerGlobalScope.postMessage()")}}</dt>
	<dd>Sends a message — which can consist of <code>any</code> JavaScript object — to the parent document that first spawned the worker.</dd>
</dl>

<h3 id="Inherited_from_WorkerGlobalScope">Inherited from WorkerGlobalScope</h3>

<dl>
	<dt>{{domxref("WorkerGlobalScope.dump()")}} {{non-standard_inline}}</dt>
	<dd>Writes a message to the console.</dd>
	<dt>{{domxref("WorkerGlobalScope.importScripts()")}}</dt>
	<dd>Imports one or more scripts into the worker's scope. You can specify as many as you'd like, separated by commas. For example:<code> importScripts('foo.js', 'bar.js');</code></dd>
</dl>

<h3 id="Implemented_from_other_places">Implemented from other places</h3>

<dl>
	<dt>{{domxref("WindowBase64.atob()")}}</dt>
	<dd>Decodes a string of data which has been encoded using base-64 encoding.</dd>
	<dt>{{domxref("WindowBase64.btoa()")}}</dt>
	<dd>Creates a base-64 encoded ASCII string from a string of binary data.</dd>
	<dt>{{domxref("WindowTimers.clearInterval()")}}</dt>
	<dd>Cancels the repeated execution set using {{domxref("WindowTimers.setInterval()")}}.</dd>
	<dt>{{domxref("WindowTimers.clearTimeout()")}}</dt>
	<dd>Cancels the repeated execution set using {{domxref("WindowTimers.setTimeout()")}}.</dd>
	<dt>{{domxref("WindowTimers.setInterval()")}}</dt>
	<dd>Schedules the execution of a function every X milliseconds.</dd>
	<dt>{{domxref("WindowTimers.setTimeout()")}}</dt>
	<dd>Sets a delay for executing a function.</dd>
</dl>

