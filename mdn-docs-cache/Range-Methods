<h2 name="Methods" id="Methods">Methods</h2>

<p><em>There are no inherited methods.</em></p>

<dl>
 <dt>{{ domxref("Range.setStart()")}}</dt>
 <dd>Sets the start position of a <code>Range</code>.</dd>
 <dt>{{ domxref("Range.setEnd()")}}</dt>
 <dd>Sets the end position of a <code>Range</code>.</dd>
 <dt>{{ domxref("Range.setStartBefore()")}}</dt>
 <dd>Sets the start position of a <code>Range</code> relative to another {{ domxref("Node") }}.</dd>
 <dt>{{ domxref("Range.setStartAfter()")}}</dt>
 <dd>Sets the start position of a <code>Range</code> relative to another {{ domxref("Node") }}.</dd>
 <dt>{{ domxref("Range.setEndBefore()")}}</dt>
 <dd>Sets the end position of a <code>Range</code> relative to another {{ domxref("Node") }}.</dd>
 <dt>{{ domxref("Range.setEndAfter()")}}</dt>
 <dd>Sets the end position of a <code>Range</code> relative to another {{ domxref("Node") }}.</dd>
 <dt>{{ domxref("Range.selectNode()")}}</dt>
 <dd>Sets the <code>Range</code> to contain the {{ domxref("Node") }} and its contents.</dd>
 <dt>{{ domxref("Range.selectNodeContents()")}}</dt>
 <dd>Sets the <code>Range</code> to contain the contents of a {{ domxref("Node") }}.</dd>
 <dt>{{ domxref("Range.collapse()")}}</dt>
 <dd>Collapses the <code>Range</code> to one of its boundary points.</dd>
 <dt>{{ domxref("Range.cloneContents()")}}</dt>
 <dd>Returns a {{ domxref("DocumentFragment") }} copying the nodes of a <code>Range</code>.</dd>
 <dt>{{ domxref("Range.deleteContents()")}}</dt>
 <dd>Removes the contents of a <code>Range</code> from the {{ domxref("Document") }}.</dd>
 <dt>{{ domxref("Range.extractContents()")}}</dt>
 <dd>Moves contents of a <code>Range</code> from the document tree into a {{ domxref("DocumentFragment") }}.</dd>
 <dt>{{ domxref("Range.insertNode()")}}</dt>
 <dd>Insert a {{ domxref("Node") }} at the start of a <code>Range</code>.</dd>
 <dt>{{ domxref("Range.surroundContents()")}}</dt>
 <dd>Moves content of a <code>Range</code> into a new {{ domxref("Node") }}.</dd>
 <dt>{{ domxref("Range.compareBoundaryPoints()")}}</dt>
 <dd>Compares the boundary points of the <code>Range</code> with another <code>Range</code>.</dd>
 <dt>{{ domxref("Range.cloneRange()")}}</dt>
 <dd>Returns a <code>Range</code> object with boundary points identical to the cloned <code>Range</code>.</dd>
 <dt>{{ domxref("Range.detach()")}}</dt>
 <dd>Releases the <code>Range</code> from use to improve performance.</dd>
 <dt>{{ domxref("Range.toString()")}}</dt>
 <dd>Returns the text of the <code>Range</code>.</dd>
 <dt>{{ domxref("Range.compareNode()")}} {{ Obsolete_inline }}{{non-standard_inline}}</dt>
 <dd>Returns a constant representing whether the {{domxref("Node")}} is before, after, inside, or surrounding the range.</dd>
 <dt>{{ domxref("Range.comparePoint()")}} {{experimental_inline}}</dt>
 <dd>Returns -1, 0, or 1 indicating whether the point occurs before, inside, or after the <code>Range</code>.</dd>
 <dt>{{ domxref("Range.createContextualFragment()")}}{{experimental_inline}}</dt>
 <dd>Returns a {{ domxref("DocumentFragment") }} created from a given string of code.</dd>
 <dt>{{ domxref("Range.getBoundingClientRect()") }} {{experimental_inline}}</dt>
 <dd>Returns a {{ domxref("DOMRect") }} object which bounds the entire contents of the <code>Range</code>; this would be the union of all the rectangles returned by {{ domxref("range.getClientRects()") }}.</dd>
 <dt>{{ domxref("Range.getClientRects()") }} {{experimental_inline}}</dt>
 <dd>Returns a list of {{ domxref("DOMRect") }} objects that aggregates the results of {{ domxref("Element.getClientRects()") }} for all the elements in the <code>Range</code>.</dd>
 <dt>{{ domxref("Range.intersectsNode()")}} {{experimental_inline}}</dt>
 <dd>Returns a <code>boolean</code> indicating whether the given node intersects the <code>Range</code>.</dd>
 <dt>{{ domxref("Range.isPointInRange()")}} {{experimental_inline}}</dt>
 <dd>Returns a <code>boolean</code> indicating whether the given point is in the <code>Range</code>.</dd>
</dl>

