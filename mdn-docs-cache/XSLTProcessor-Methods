<h2 id="Methods">Methods</h2>

<dl>
 <dt><code><a href="/en-US/docs/Mozilla/WebIDL_bindings#Throws">[Throws]</a> void </code>{{domxref("XSLTProcessor.importStylesheet")}}<code>(</code>{{domxref("Node")}}<code> styleSheet)</code></dt>
 <dd>Imports the XSLT stylesheet. If the given node is a document node, you can pass in a full XSL Transform or a <a href="http://www.w3.org/TR/xslt#result-element-stylesheet" class="external">literal result element transform</a>; otherwise, it must be an <code>&lt;xsl:stylesheet&gt;</code> or <code>&lt;xsl:transform&gt;</code> element.</dd>
 <dt><code><a href="/en-US/docs/Mozilla/WebIDL_bindings#Throws">[Throws]</a> </code>{{domxref("DocumentFragment")}} {{domxref("XSLTProcessor.transformToFragment")}}<code>(</code>{{domxref("Node")}}<code> source, </code>{{domxref("Document")}}<code> owner)</code></dt>
 <dd>Transforms the node source by applying the stylesheet imported using the {{domxref("XSLTProcessor.importStylesheet()")}} function. The owner document of the resulting document fragment is the owner node.</dd>
 <dt><code><a href="/en-US/docs/Mozilla/WebIDL_bindings#Throws">[Throws]</a></code> {{domxref("Document")}} {{domxref("XSLTProcessor.transformToDocument")}}<code>(</code>{{domxref("Node")}}<code> source)</code></dt>
 <dd>
 <p>Transforms the node source applying the stylesheet given importing using the {{domxref("XSLTProcessor.importStylesheet()")}} function.</p>

 <p>The resultant object depends on the <a href="http://www.w3.org/TR/xslt#output" class="external">output method</a> of the stylesheet:</p>

 <table class="standard-table">
  <thead>
   <tr>
    <th scope="col">Output method</th>
    <th scope="col">Result type</th>
   </tr>
  </thead>
  <tbody>
   <tr>
    <td><code>html</code></td>
    <td>{{domxref("HTMLDocument")}}</td>
   </tr>
   <tr>
    <td><code>xml</code></td>
    <td>{{domxref("XMLDocument")}}</td>
   </tr>
   <tr>
    <td><code>text</code></td>
    <td>{{domxref("XMLDocument")}} with a single root element <code>&lt;transformiix:result&gt;</code> with the text as a child</td>
   </tr>
  </tbody>
 </table>
 </dd>
 <dt><code><a href="/en-US/docs/Mozilla/WebIDL_bindings#Throws">[Throws]</a> void </code>{{domxref("XSLTProcessor.setParameter")}}<code>(</code>{{jsxref("String")}}<code> namespaceURI, </code>{{jsxref("String")}}<code> localName, any value)</code></dt>
 <dd>Sets a parameter in the XSLT stylesheet that was imported. (Sets theÂ value of an <code>&lt;xsl:param&gt;</code>.) A null value for <code>namespaceURI</code> is treated the same as an empty string.</dd>
 <dt><code><a href="/en-US/docs/Mozilla/WebIDL_bindings#Throws">[Throws]</a> any </code>{{domxref("XSLTProcessor.getParameter")}}<code>(</code>{{jsxref("String")}}<code> namespaceURI, </code>{{jsxref("String")}}<code> localName)</code></dt>
 <dd>Gets the value of a parameter from the XSLT stylesheet. A null value for <code>namespaceURI</code> is treated the same as an empty string.</dd>
 <dt><code><a href="/en-US/docs/Mozilla/WebIDL_bindings#Throws">[Throws]</a> void </code>{{domxref("XSLTProcessor.removeParameter")}}<code>(</code>{{jsxref("String")}}<code> namespaceURI, </code>{{jsxref("String")}}<code> localName)</code></dt>
 <dd>Removes the parameter if it was previously set. This will make the <code>XSLTProcessor</code> use the default value for the parameter as specified in the stylesheet. A null value for <code>namespaceURI</code> is treated the same as an empty string.</dd>
 <dt><code>void </code>{{domxref("XSLTProcessor.clearParameters()")}}</dt>
 <dd>Removes all set parameters from the <code>XSLTProcessor</code>. The <code>XSLTProcessor</code> will then use the defaults specified in the XSLT stylesheet.</dd>
 <dt><code>void </code>{{domxref("XSLTProcessor.reset()")}}</dt>
 <dd>Removes all parameters and stylesheets from the <code>XSLTProcessor</code>.</dd>
</dl>

