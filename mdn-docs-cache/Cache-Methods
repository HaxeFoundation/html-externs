<h2 id="Methods">Methods</h2>

<dl>
 <dt>{{domxref("Cache.match", "Cache.match(request, options)")}}</dt>
 <dd>Returns a {{jsxref("Promise")}} that resolves to the response associated with the first matching request in the <code>Cache</code> object.</dd>
 <dt>{{domxref("Cache.matchAll", "Cache.matchAll(request, options)")}}</dt>
 <dd>Returns a {{jsxref("Promise")}} that resolves to an array of all matching requests in the <code>Cache</code> object.</dd>
 <dt>{{domxref("Cache.add", "Cache.add(request)")}}</dt>
 <dd>Takes a URL, retrieves it and adds the resulting response object to the given cache. This is functionally equivalent to calling <code>fetch()</code>, then using <code>put()</code> to add the results to the cache.</dd>
 <dt>{{domxref("Cache.addAll", "Cache.addAll(requests)")}}</dt>
 <dd>Takes an array of URLs, retrieves them, and adds the resulting response objects to the given cache.</dd>
 <dt>{{domxref("Cache.put", "Cache.put(request, response)")}}</dt>
 <dd>Takes both a request and its response and adds it to the given cache.</dd>
 <dt>{{domxref("Cache.delete", "Cache.delete(request, options)")}}</dt>
 <dd>Finds the {{domxref("Cache")}} entry whose key is the request, returning a {{jsxref("Promise")}} that resolves to <code>true</code> if a matching <code>Cache</code> entry is found and deleted. If no <code>Cache</code> entry is found, the promise resolves to <code>false</code>.</dd>
 <dt>{{domxref("Cache.keys", "Cache.keys(request, options)")}}</dt>
 <dd>Returns a {{jsxref("Promise")}} that resolves to an array of <code>Cache</code> keys.</dd>
</dl>

