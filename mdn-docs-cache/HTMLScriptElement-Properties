<h2 id="Properties">Properties</h2>

<p><em>Inherits properties from its parent, {{domxref("HTMLElement")}}.</em></p>

<table class="standard-table">
 <thead>
  <tr>
   <th>Name</th>
   <th>Type</th>
   <th>Description</th>
  </tr>
 </thead>
 <tbody>
  <tr>
   <td><code id="type_property">type</code></td>
   <td>{{domxref("DOMString")}}</td>
   <td>Represents the MIME type of the script. It reflects the {{htmlattrxref("type","script")}} attribute.</td>
  </tr>
  <tr>
   <td><code id="src_property">src</code></td>
   <td>{{domxref("DOMString")}}</td>
   <td>Gets and sets the URL of an external script. It reflects the {{htmlattrxref("src","script")}} attribute.</td>
  </tr>
  <tr>
   <td><code id="event_property">event</code>{{obsolete_inline}}</td>
   <td>{{domxref("DOMString")}}</td>
   <td>An old, quirky way of registering event handlers on elements in an HTML document.</td>
  </tr>
  <tr>
   <td><code id="charset_property">charset</code></td>
   <td>{{domxref("DOMString")}}</td>
   <td>Represents the character encoding of an external script. It reflects the {{htmlattrxref("charset","script")}} attribute.</td>
  </tr>
  <tr>
   <td><code id="async_property">async</code></td>
   <td>{{domxref("Boolean")}}</td>
   <td rowspan="2">
    <p>The <code>async</code> and <code>defer</code> attributes are <a href="/en-US/docs/JavaScript/Reference/Global_Objects/Boolean">boolean</a> attributes that control how the script should be executed. <strong>The <code>defer</code> and <code>async</code> attributes must not be specified if the <code>src</code> attribute is absent.</strong></p>

    <p>There are three possible execution modes:</p>

    <ol>
     <li>If the <code>async</code> attribute is present, then the script will be executed asynchronously as soon as it downloads.</li>
     <li>If the <code>async</code> attribute is absent but the <code>defer</code> attribute is present, then the script is executed when <a href="/en-US/docs/Web/Events/DOMContentLoaded">the page has finished parsing</a>.</li>
     <li>If neither attribute is present, then the script is fetched and executed immediately, blocking further parsing of the page.</li>
    </ol>

    <p>The <code>defer</code> attribute may be specified with the <code>async</code> attribute, so legacy browsers that only support <code>defer</code> (and not <code>async</code>) fall back to the <code>defer</code> behavior instead of the default blocking behavior.</p>

    <div class="note"><strong>Note:</strong> The exact processing details for these attributes are complex, involving many different aspects of HTML, and therefore are scattered throughout the specification. <a href="http://www.w3.org/html/wg/drafts/html/master/scripting-1.html#prepare-a-script">These algorithms</a> describe the core ideas, but they rely on the parsing rules for {{HTMLElement("script")}} <a href="http://www.w3.org/html/wg/drafts/html/master/syntax.html#scriptTag">start</a> and <a href="http://www.w3.org/html/wg/drafts/html/master/syntax.html#scriptEndTag">end</a> tags in HTML, <a href="http://www.w3.org/html/wg/drafts/html/master/syntax.html#scriptForeignEndTag">in foreign content</a>, and <a href="http://www.w3.org/html/wg/drafts/html/master/the-xhtml-syntax.html#scriptTagXML">in XML</a>; the rules for the <a href="/en-US/docs/DOM/document.write"><code>document.write()</code></a> method; the handling of <a href="http://www.w3.org/html/wg/drafts/html/master/webappapis.html#scripting">scripting</a>; and so on.</div>
   </td>
  </tr>
  <tr>
   <td><code id="defer_property">defer</code></td>
   <td>{{domxref("Boolean")}}</td>
  </tr>
  <tr>
   <td><code id="crossOrigin_property">crossOrigin </code>{{experimental_inline}}</td>
   <td>{{domxref("DOMString")}}</td>
   <td>A {{domxref("DOMString")}} reflecting the <a href="/en-US/docs/Web/HTML/CORS_settings_attributes">CORS setting</a> for the script element. For scripts from other <a href="/en-US/docs/Glossary/Origin">origins</a>, this controls if error information will be exposed.</td>
  </tr>
  <tr>
   <td><code id="text_property">text</code></td>
   <td>{{domxref("DOMString")}}</td>
   <td>
    <p>The IDL attribute <code>text</code> joins and returns the contents of all <a href="/en-US/docs/DOM/Text"><code>Text</code> nodes</a> inside the {{HTMLElement("script")}} element (ignoring other nodes like comments) in tree order. On setting, it acts the same way as the <a href="/en-US/docs/DOM/Node.textContent"><code>textContent</code></a> IDL attribute.</p>

    <div class="note"><strong>Note:</strong> When inserted using the <a href="/en-US/docs/DOM/document.write"><code>document.write()</code></a> method, {{HTMLElement("script")}} elements execute (typically synchronously), but when inserted using <a href="/en-US/docs/DOM/element.innerHTML"><code>innerHTML</code></a> or <a href="/en-US/docs/DOM/element.outerHTML"><code>outerHTML</code></a>, they do not execute at all.</div>
   </td>
  </tr>
  <tr>
   <td><code>noModule</code></td>
   <td>{{domxref("Boolean")}}</td>
   <td>This Boolean property stops the script's execution in browsers that support<a href="https://hacks.mozilla.org/2015/08/es6-in-depth-modules/"> ES2015 modules</a> — used to run fallback scripts in older browsers that do <em>not</em> support JavaScript modules.</td>
  </tr>
 </tbody>
</table>

