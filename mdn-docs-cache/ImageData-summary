The <code><strong>ImageData</strong></code> interface represents the underlying pixel data of an area of a <a href="/en-US/docs/Web/HTML/Element/canvas" title="Use the HTML &lt;canvas&gt; element with either the canvas scripting API or the WebGL API to draw graphics and animations."><code>&lt;canvas&gt;</code></a> element. It is created using the <a href="/en-US/docs/Web/API/ImageData/ImageData" title="The ImageData() constructor returns a newly instantiated ImageData object build from the typed array given and having the specified width and height."><code>ImageData()</code></a> constructor or creator methods on the <a href="/en-US/docs/Web/API/CanvasRenderingContext2D" title='To get an object of this interface, call getContext() on a &lt;canvas&gt; element, supplying "2d" as the argument:'><code>CanvasRenderingContext2D</code></a> object associated with a canvas: <a href="/en-US/docs/Web/API/CanvasRenderingContext2D/createImageData" title="The CanvasRenderingContext2D.createImageData() method of the Canvas 2D API creates a new, blank ImageData object with the specified dimensions. All of the pixels in the new object are transparent black."><code>createImageData()</code></a> and <a href="/en-US/docs/Web/API/CanvasRenderingContext2D/getImageData" title="The CanvasRenderingContext2D method getImageData() of the Canvas 2D API returns an ImageData object representing the underlying pixel data for a specified portion of the canvas."><code>getImageData()</code></a>. It can also be used to set a part of the canvas by using <a href="/en-US/docs/Web/API/CanvasRenderingContext2D/putImageData" title="The CanvasRenderingContext2D.putImageData() method of the Canvas 2D API paints data from the given ImageData object onto the bitmap. If a dirty rectangle is provided, only the pixels from that rectangle are painted. This method is not affected by the canvas transformation matrix."><code>putImageData()</code></a>.