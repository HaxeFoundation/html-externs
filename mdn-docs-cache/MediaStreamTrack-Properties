<h2 id="Properties">Properties</h2>

<p>In addition to the properties listed below, <code>MediaStreamTrack</code> has constrainable properties which can be set using {{domxref("MediaStreamTrack.applyConstraints", "applyConstraints()")}} and accessed using {{domxref("MediaStreamTrack.getConstraints", "getConstraints()")}} and {{domxref("MediaStreamTrack.getSettings", "getSettings()")}}. See <a href="/en-US/docs/Web/API/Media_Streams_API/Constraints">Capabilities, constraints, and settings</a> to learn how to correctly work with constrainable properties. Not doing so correctly will result in your code being unreliable.</p>

<dl>
 <dt>{{domxref("MediaStreamTrack.contentHint")}}</dt>
 <dd>A string that may be used by the web application to provide a hint as to what type of content the track contains to guide how it should be treated by API consumers.</dd>
 <dt>{{domxref("MediaStreamTrack.enabled")}}</dt>
 <dd>A Boolean whose value of <code>true</code> if the track is enabled, that is allowed to render the media source stream; or <code>false</code> if it is disabled, that is not rendering the media source stream but silence and blackness. If the track has been disconnected, this value can be changed but has no more effect.
 <div class="note"><strong>Note:</strong> You can implement standard "mute" functionality by setting <code>enabled</code> to <code>false</code>. The <code>muted</code> property refers to a condition in which there's no media because of a technical issue.</div>
 </dd>
 <dt>{{domxref("MediaStreamTrack.id")}} {{readonlyInline}}</dt>
 <dd>Returns a {{domxref("DOMString")}} containing a unique identifier (GUID) for the track; it is generated by the browser.</dd>
 <dt>{{domxref("MediaStreamTrack.isolated")}} {{ReadOnlyInline}}</dt>
 <dd>Returns a Boolean value which is <code>true</code> if the track is <strong>isolated</strong>; that is, the track cannot be accessed by the document that owns the <code>MediaStreamTrack</code>. This happens when the {{domxref("MediaStreamTrack.peerIdentity", "peerIdentity")}} property is set, or if the track comes from a cross-origin source.</dd>
 <dt>{{domxref("MediaStreamTrack.kind")}} {{readonlyInline}}</dt>
 <dd>Returns a {{domxref("DOMString")}} set to <code>"audio"</code> if the track is an audio track and to <code>"video"</code>, if it is a video track. It doesn't change if the track is deassociated from its source.</dd>
 <dt>{{domxref("MediaStreamTrack.label")}} {{readonlyInline}}</dt>
 <dd>Returns a {{domxref("DOMString")}} containing a user agent-assigned label that identifies the track source, as in <code>"internal microphone"</code>. The string may be left empty and is empty as long as no source has been connected. When the track is deassociated from its source, the label is not changed.</dd>
 <dt>{{domxref("MediaStreamTrack.muted")}} {{readonlyInline}}</dt>
 <dd>Returns a Boolean value indicating whether the track is unable to provide media data due to a technical issue.
 <div class="note"><strong>Note:</strong> You can implement standard "mute" functionality by setting <code>enabled</code> to <code>false</code>, and unmute the media by setting it back to <code>true</code> again.</div>
 </dd>
 <dt>{{domxref("MediaStreamTrack.readonly")}} {{readonlyInline}}</dt>
 <dd>Returns a Boolean value with a value of <code>true</code> if the track is readonly (such a video file source or a camera that settings can't be modified), <code>false</code> otherwise.</dd>
 <dt>{{domxref("MediaStreamTrack.readyState")}} {{readonlyInline}}</dt>
 <dd>Returns an enumerated value giving the status of the track. This will be one of the following values:
 <ul>
  <li><code>"live"</code> which indicates that an input is connected and does its best-effort in providing real-time data. In that case, the output of data can be switched on or off using the {{domxref("MediaStreamTrack.enabled", "enabled")}} attribute.</li>
  <li><code>"ended"</code> which indicates that the input is not giving any more data and will never provide new data.</li>
 </ul>
 </dd>
 <dt>{{domxref("MediaStreamTrack.remote")}} {{obsolete_inline("")}} {{readonlyInline}}</dt>
 <dd>Returns a Boolean with a value of <code>true</code> if the track is sourced by a {{domxref("RTCPeerConnection")}}, <code>false</code> otherwise.</dd>
</dl>

<h3 id="Event_handlers">Event handlers</h3>

<dl>
 <dt>{{domxref("MediaStreamTrack.onstarted")}}</dt>
 <dd>An {{domxref("EventHandler")}} containing the action to perform when an {{event("started")}} event is fired on the object, that is when a new {{domxref("MediaStreamTrack")}} object is added.</dd>
 <dt>{{domxref("MediaStreamTrack.onended")}}</dt>
 <dd>An {{domxref("EventHandler")}} containing the action to perform when an {{event("ended_(MediaStream)", "ended")}} event is fired on the object, that is when a  {{domxref("MediaStreamTrack")}} object is removed from it.</dd>
 <dt>{{domxref("MediaStreamTrack.onisolationchange")}}</dt>
 <dd>An event handler that is called when the {{event("isolationchange")}} event is fired at the track object. This occurs whenever the value of the {{domxref("MediaStreamTrack.isolated", "isolated")}} property changes due to the document gaining or losing permission to access the track.</dd>
 <dt>{{domxref("MediaStreamTrack.onmute")}}</dt>
 <dd>An {{domxref("EventHandler")}} containing the action to perform when an {{event("mute")}} event is fired on the object, that is when the streaming is terminating.</dd>
 <dt>{{domxref("MediaStreamTrack.onunmute")}}</dt>
 <dd>An {{domxref("EventHandler")}} containing the action to perform when an {{event("unmute")}} event is fired on the object, that is when a  {{domxref("MediaStreamTrack")}} object is removed from it.</dd>
 <dt>{{domxref("MediaStreamTrack.onoverconstrained")}}</dt>
 <dd>An {{domxref("EventHandler")}} containing the action to perform when an {{event("overconstrained")}} event is fired on the object, that is when a  {{domxref("MediaStreamTrack")}} object is removed from it.</dd>
</dl>

